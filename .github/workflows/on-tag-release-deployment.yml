name: Frontend Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*' # Push events to every tag not containing /
jobs:
  Deploy-Frontend-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Latest LTS version matches your project
          cache: 'npm'
          cache-dependency-path: './frontend/package.json'
      
      # No need for a separate navigate step as working-directory handles this
      
      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install
        
      - name: Install Vercel CLI
        working-directory: ./frontend
        run: npm install -D vercel@latest
        
      # Create vercel.json to explicitly define the project
      - name: Create Vercel Project Configuration
        working-directory: ./frontend
        run: |
          echo '{
            "framework": "nextjs",
            "buildCommand": "next build",
            "outputDirectory": ".next",
            "devCommand": "next dev",
            "installCommand": "npm install"
          }' > vercel.json
          cat vercel.json
        
      - name: Pull Vercel Environment Information
        working-directory: ./frontend
        run: npx vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: List Build Artifacts
        working-directory: ./frontend
        run: ls -al

      - name: Build Project Artifacts
        working-directory: ./frontend
        run: npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: List Build Artifacts After Build
        working-directory: ./frontend
        run: ls -al

      - name: Deploy Project Artifacts to Vercel
        working-directory: ./frontend
        run: npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}